{
  "openapi": "3.0.0",
  "info": {
    "title": "Enigma Genomics Integration APIs",
    "version": "1.0.0",
    "description": "API documentation for Enigma Genomics integration endpoints."
  },
  "servers": [
    {
      "url": "https://api.enigmagenomics.com/us-central1/v3external",
      "description": "Production server"
    },
    {
      "url": "http://localhost:5001/enigmagenomics/us-central1/v3external",
      "description": "Local emulator"
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    },
    "schemas": {
        "CreateOrder": {
            "type": "object",
            "properties": {
                "product_details": {
                "type": "object",
                "properties": {
                    "code": { "type": "string", "minLength": 4 }
                },
                "required": ["code"]
                },
                "patient_details": {
                "type": "object",
                "properties": {
                    "mrn": { "type": "string" },
                    "is_fetus_sample": { "type": "string", "enum": ["yes", "no"] },
                    "nationality": { "type": "string" },
                    "ethnicity": { "type": "string" },
                    "dob": { "type": "string" },
                    "age": { "type": "string" },
                    "gender": { "type": "string" },
                    "fname": { "type": "string" },
                    "lname": { "type": "string" },
                    "countryCode": { "type": "string" },
                    "country": { "type": "string" },
                    "tel": { "type": "string" },
                    "email": { "type": "string" },
                    "natid": { "type": "string" },
                    "sample_type": { "type": "string" },
                    "sample_collection_date": { "type": "string" },
                    "sample_collection_time": { "type": "string" },
                    "sample_count": { "type": "string" },
                    "indication": { "type": "string" },
                    "additional_indication": { "type": "string" },
                    "body_height": { "type": "string" },
                    "body_weight": { "type": "string" },
                    "secondary_findings": { "type": "string" },
                    "history_personal": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                        "id": { "type": "string" },
                        "age_of_manifestation": { "type": "string" }
                        },
                        "required": ["id", "age_of_manifestation"]
                    }
                    },
                    "parents_related": { "type": "string", "enum": ["yes", "no", "notsure"] },
                    "parents_first_cousin": { "type": "string", "enum": ["yes", "no", "notsure"] },
                    "history_family": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                        "id": { "type": "string" },
                        "age_of_manifestation": { "type": "string" }
                        },
                        "required": ["id", "age_of_manifestation"]
                    }
                    }
                },
                "required": [
                    "mrn", "is_fetus_sample", "nationality", "ethnicity", "dob", "age", "gender", "fname", "lname",
                    "countryCode", "country", "tel", "email", "natid", "sample_type", "sample_collection_date",
                    "sample_collection_time", "sample_count", "indication", "additional_indication", "body_height",
                    "body_weight", "secondary_findings", "history_personal", "parents_related", "parents_first_cousin", "history_family"
                ]
                },
                "primary_contact_details": {
                "type": "object",
                "properties": {
                    "fname": { "type": "string" },
                    "lname": { "type": "string" },
                    "countryCode": { "type": "string" },
                    "country": { "type": "string" },
                    "tel": { "type": "string" },
                    "email": { "type": "string" }
                },
                "required": ["fname", "lname", "countryCode", "country", "tel", "email"]
                },
                "shipping_details": {
                "type": "object",
                "properties": {
                    "ship_to": { "type": "string" },
                    "ship_country": { "type": "string" },
                    "ship_state": { "type": "string" },
                    "ship_locality": { "type": "string" },
                    "ship_areacode": { "type": "string" },
                    "ship_lat": { "type": "string" },
                    "ship_lng": { "type": "string" }
                },
                "required": ["ship_to", "ship_country", "ship_state", "ship_locality", "ship_areacode", "ship_lat", "ship_lng"]
                },
                "coupon": {
                "type": "object",
                "properties": {
                    "code": { "type": "string", "minLength": 4 }
                },
                "required": ["code"]
                }
            },
            "required": ["product_details", "patient_details", "primary_contact_details", "shipping_details", "coupon"]
        },
        "UpdateOrder": {
            "type": "object",
        "properties": {
            "patient_details": {
            "type": "object",
            "properties": {
                "mrn": { "type": "string" },
                "is_fetus_sample": { "type": "string", "enum": ["yes", "no"] },
                "nationality": { "type": "string" },
                "ethnicity": { "type": "string" },
                "dob": { "type": "string" },
                "age": { "type": "string" },
                "gender": { "type": "string" },
                "fname": { "type": "string" },
                "lname": { "type": "string" },
                "countryCode": { "type": "string" },
                "country": { "type": "string" },
                "tel": { "type": "string" },
                "email": { "type": "string" },
                "sample_type": { "type": "string" },
                "sample_collection_date": { "type": "string" },
                "sample_collection_time": { "type": "string" },
                "sample_count": { "type": "string" },
                "indication": { "type": "string" },
                "additional_indication": { "type": "string" },
                "body_height": { "type": "string" },
                "body_weight": { "type": "string" },
                "secondary_findings": { "type": "string" },
                "history_personal": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                    "id": { "type": "string" },
                    "age_of_manifestation": { "type": "string" }
                    },
                    "required": ["id", "age_of_manifestation"]
                }
                },
                "parents_related": { "type": "string", "enum": ["yes", "no", "notsure"] },
                "parents_first_cousin": { "type": "string", "enum": ["yes", "no", "notsure"] },
                "history_family": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                    "id": { "type": "string" },
                    "age_of_manifestation": { "type": "string" }
                    },
                    "required": ["id", "age_of_manifestation"]
                }
                }
            },
            "required": [
                "mrn", "is_fetus_sample", "nationality", "ethnicity", "dob", "age", "gender", "fname", "lname",
                "countryCode", "country", "tel", "email", "sample_type", "sample_collection_date",
                "sample_collection_time", "sample_count", "indication", "additional_indication", "body_height",
                "body_weight", "secondary_findings", "history_personal", "parents_related", "parents_first_cousin", "history_family"
            ]
            },
            "primary_contact_details": {
            "type": "object",
            "properties": {
                "fname": { "type": "string" },
                "lname": { "type": "string" },
                "countryCode": { "type": "string" },
                "country": { "type": "string" },
                "tel": { "type": "string" },
                "email": { "type": "string" }
            },
            "required": ["fname", "lname", "countryCode", "country", "tel", "email"]
            },
            "shipping_details": {
            "type": "object",
            "properties": {
                "ship_to": { "type": "string" },
                "ship_country": { "type": "string" },
                "ship_state": { "type": "string" },
                "ship_locality": { "type": "string" },
                "ship_areacode": { "type": "string" },
                "ship_lat": { "type": "string" },
                "ship_lng": { "type": "string" }
            },
            "required": ["ship_to", "ship_country", "ship_state", "ship_locality", "ship_areacode", "ship_lat", "ship_lng"]
            }
        },
        "required": ["patient_details", "primary_contact_details", "shipping_details"]
        }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/orders/{oid}/payment-link": {
        "get": {
            "summary": "Get payment link for an order",
            "tags": ["Orders"],
            "security": [{ "ApiKeyAuth": [] }],
            "parameters": [
            {
                "name": "oid",
                "in": "path",
                "required": true,
                "schema": { "type": "string" }
            }
            ],
            "responses": {
            "200": {
                "description": "Payment link generated",
                "content": {
                "application/json": {
                    "schema": {
                    "type": "object",
                    "properties": {
                        "code": { "type": "integer", "example": 200, "description": "HTTP status code" },
                        "message": { "type": "string", "example": "Payment link generated successfully", "description": "Status message" },
                        "data": {
                            "type": "object",
                            "properties": {
                                "paymentLink": { "type": "string", "example": "https://payment.link/12345", "description": "Generated payment link" }
                            }
                        }
                    }
                    }
                }
                }
            },
            "404": { "description": "Order not found" }
            }
        }
    },

    "/orders/{page}/{records}": {
        "get": {
            "summary": "Get paginated list of orders",
            "tags": ["Orders"],
            "security": [{ "ApiKeyAuth": [] }],
            "parameters": [
            { "name": "page", "in": "path", "required": true, "schema": { "type": "integer", "default": 1 } },
            { "name": "records", "in": "path", "required": true, "schema": { "type": "integer", "default": 10 } },
            { "name": "searchKey", "in": "query", "required": false, "schema": { "type": "string" } },
            { "name": "searchValue", "in": "query", "required": false, "schema": { "type": "string" } },
            { "name": "sortIn", "in": "query", "required": false, "schema": { "type": "string", "enum": ["asc", "desc"], "default": "desc" } }
            ],
            "responses": {
            "200": {
                "description": "List of orders",
                "content": {
                "application/json": {
                    "schema": {
                    "type": "object",
                    "properties": {
                        "code": { "type": "integer", "example": 200, "description": "HTTP status code" },
                        "message": { "type": "string", "example": "List of orders retrieved successfully", "description": "Status message" },
                        "data": { "type": "array", "items": { "type": "object" }, "example": [], "description": "Array of order objects" },
                        "page": { "type": "integer", "example": 1, "description": "Current page number" },
                        "records": { "type": "integer", "example": 10, "description": "Number of records per page" },
                        "count": { "type": "integer", "example": 100, "description": "Total number of records" }
                    }
                    }
                }
                }
            }
            }
        }
    },

    "/orders/{oid}": {
        "get": {
            "summary": "Get order details by order ID",
            "tags": ["Orders"],
            "security": [{ "ApiKeyAuth": [] }],
            "parameters": [
            { "name": "oid", "in": "path", "required": true, "schema": { "type": "string" } }
            ],
            "responses": {
            "200": {
                "description": "Order details",
                "content": {
                "application/json": {
                    "schema": {
                    "type": "object",
                    "properties": {
                        "code": { "type": "integer", "example": 200, "description": "HTTP status code" },
                        "message": { "type": "string", "example": "Order details retrieved successfully", "description": "Status message" },
                        "data": { "type": "object", "example": {}, "description": "Order details object" }
                    }
                    }
                }
                }
            },
            "404": { "description": "Order not found" }
            }
        },
        "patch": {
            "summary": "Update an existing order",
            "tags": ["Orders"],
            "security": [{ "ApiKeyAuth": [] }],
            "parameters": [
            { "name": "oid", "in": "path", "required": true, "schema": { "type": "string" } }
            ],
            "requestBody": {
            "required": true,
            "content": {
                "application/json": {
                "schema": { "$ref": "#/components/schemas/UpdateOrder" }
                }
            }
            },
            "responses": {
            "202": {
                "description": "Order updated successfully",
                "content": {
                "application/json": {
                    "schema": {
                    "type": "object",
                    "properties": {
                        "code": { "type": "integer", "example": 200, "description": "HTTP status code" },
                        "message": { "type": "string", "example": "Order updated successfully", "description": "Status message" },
                        "data": { "type": "object", "example": {}, "description": "Updated order object" }
                    }
                    }
                }
                }
            }
            }
        }
    },

    "/orders": {
        "post": {
            "summary": "Create a new order",
            "tags": ["Orders"],
            "security": [{ "ApiKeyAuth": [] }],
            "requestBody": {
            "required": true,
            "content": {
                "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateOrder" }
                }
            }
            },
            "responses": {
            "202": {
                "description": "Order created successfully",
                "content": {
                "application/json": {
                    "schema": {
                    "type": "object",
                    "properties": {
                        "code": { "type": "integer", "example": 200, "description": "HTTP status code" },
                        "message": { "type": "string", "example": "Order created successfully", "description": "Status message" },
                        "data": { "type": "object", "example": {}, "description": "Created order object" }
                    }
                    }
                }
                }
            }
            }
        }
    },

    "/products/{page}/{records}": {
        "get": {
            "summary": "Get paginated list of products",
            "tags": ["Products"],
            "security": [{ "ApiKeyAuth": [] }],
            "parameters": [
            { "name": "page", "in": "path", "required": true, "schema": { "type": "integer", "default": 1 } },
            { "name": "records", "in": "path", "required": true, "schema": { "type": "integer", "default": 5 } },
            { "name": "searchKey", "in": "query", "required": false, "schema": { "type": "string" } },
            { "name": "searchValue", "in": "query", "required": false, "schema": { "type": "string" } },
            { "name": "sortIn", "in": "query", "required": false, "schema": { "type": "string", "enum": ["asc", "desc"], "default": "desc" } }
            ],
            "responses": {
            "200": {
                "description": "List of products",
                "content": {
                "application/json": {
                    "schema": {
                    "type": "object",
                    "properties": {
                        "code": { "type": "integer", "example": 200, "description": "HTTP status code" },
                        "message": { "type": "string", "example": "List of products retrieved successfully", "description": "Status message" },
                        "data": { "type": "array", "items": { "type": "object" }, "example": [], "description": "Array of product objects" },
                        "page": { "type": "integer", "example": 1, "description": "Current page number" },
                        "records": { "type": "integer", "example": 5, "description": "Number of records per page" },
                        "count": { "type": "integer", "example": 100, "description": "Total number of records" }
                    }
                    }
                }
                }
            }
            }
        }
    },

    "/products/{pcode}": {
        "get": {
            "summary": "Get product details by product code",
            "tags": ["Products"],
            "security": [{ "ApiKeyAuth": [] }],
            "parameters": [
            { "name": "pcode", "in": "path", "required": true, "schema": { "type": "string" } }
            ],
            "responses": {
            "200": {
                "description": "Product details",
                "content": {
                "application/json": {
                    "schema": {
                    "type": "object",
                    "properties": {
                        "code": { "type": "integer", "example": 200, "description": "HTTP status code" },
                        "message": { "type": "string", "example": "Product details retrieved successfully", "description": "Status message" },
                        "data": { "type": "object", "example": {}, "description": "Product details object" }
                    }
                    }
                }
                }
            },
            "404": { "description": "Product not found" }
            }
        }
    },

    "/coupons/{page}/{records}": {
        "get": {
            "summary": "Get all coupons for the current user",
            "tags": ["Coupons"],
            "security": [{ "ApiKeyAuth": [] }],
            "parameters": [
            { "name": "page", "in": "path", "required": true, "schema": { "type": "integer", "default": 1 } },
            { "name": "records", "in": "path", "required": true, "schema": { "type": "integer", "default": 5 } },
            { "name": "searchKey", "in": "query", "required": false, "schema": { "type": "string" } },
            { "name": "searchValue", "in": "query", "required": false, "schema": { "type": "string" } },
            { "name": "sortIn", "in": "query", "required": false, "schema": { "type": "string", "enum": ["asc", "desc"], "default": "desc" } }
            ],
            "responses": {
            "200": {
                "description": "List of coupons",
                "content": {
                "application/json": {
                    "schema": {
                    "type": "object",
                    "properties": {
                        "code": { "type": "integer", "example": 200, "description": "HTTP status code" },
                        "message": { "type": "string", "example": "List of coupons retrieved successfully", "description": "Status message" },
                        "data": { "type": "array", "items": { "type": "object" }, "example": [], "description": "Array of coupon objects" },
                        "page": { "type": "integer", "example": 1, "description": "Current page number" },
                        "records": { "type": "integer", "example": 5, "description": "Number of records per page" },
                        "count": { "type": "integer", "example": 100, "description": "Total number of records" }
                        }
                    }
                }
                }
            }
            }
        }
    },

    "/coupons/{cid}": {
        "get": {
            "summary": "Get coupon details by coupon ID",
            "tags": ["Coupons"],
            "security": [{ "ApiKeyAuth": [] }],
            "parameters": [
            {
                "name": "cid",
                "in": "path",
                "required": true,
                "schema": { "type": "string" }
            }
            ],
            "responses": {
            "200": {
                "description": "Coupon details",
                "content": {
                "application/json": {
                    "schema": {
                    "type": "object",
                    "properties": {
                        "code": { "type": "integer", "example": 200, "description": "HTTP status code" },
                        "message": { "type": "string", "example": "Coupon details retrieved successfully", "description": "Status message" },
                        "data": { "type": "object", "example": {}, "description": "Coupon details object" }
                    }
                    }
                }
                }
            },
            "404": { "description": "Coupon not found" }
            }
        }
    }
  }
}